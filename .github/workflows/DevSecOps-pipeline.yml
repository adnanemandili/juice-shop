name: DevSecOps CI/CD Pipeline for OWASP Juice Shop

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build & Deploy OWASP Juice Shop
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Pull Juice Shop Docker image
        run: |
          docker pull bkimminich/juice-shop

  security_testing:
    name: Security Testing
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install CodeQL
        run: |
          curl -sSL https://github.com/github/codeql-action/releases/download/v2.0.1/codeql-action-linux64.tar.gz | tar -xz -C /usr/local/bin

      - name: Run CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      - name: Install Snyk CLI
        run: npm install -g snyk
      - name: Run Snyk for Dependency Scanning
        run: snyk test --all-projects

      - name: Set up OWASP ZAP
        uses: zaproxy/action-full-scan@v0.7.0
        env:
          ZAP_API_KEY: ${{ secrets.ZAP_API_KEY }}
      - name: Run OWASP ZAP DAST scan
        run: |
          docker run --rm -v $(pwd):/zap/wrk:rw -t owasp/zap2docker-stable zap-full-scan.py -t http://localhost:3000

  vulnerability_management:
    name: Manage & Visualize Vulnerabilities
    runs-on: ubuntu-latest
    needs: security_testing

    steps:
      - name: Install SonarQube Scanner
        run: |
          curl -sSLo sonarqube-scanner-cli.zip https://github.com/SonarSource/sonar-scanner-cli/releases/download/4.6.2.2472/sonar-scanner-cli-4.6.2.2472-linux.zip
          unzip sonarqube-scanner-cli.zip -d $HOME
          export PATH=$HOME/sonar-scanner-*/bin:$PATH

      - name: Run SonarQube scan
        run: |
          sonar-scanner \
            -Dsonar.projectKey=juice-shop \
            -Dsonar.sources=. \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONARQUBE_TOKEN }}

  redeploy:
    name: Redeploy OWASP Juice Shop
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Pull latest Juice Shop Docker image
        run: |
          docker pull bkimminich/juice-shop

      - name: Redeploy Juice Shop
        run: |
          docker stop $(docker ps -q --filter "ancestor=bkimminich/juice-shop")
          docker run -d -p 3000:3000 bkimminich/juice-shop