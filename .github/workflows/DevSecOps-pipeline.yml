name: DevSecOps CI/CD Pipeline for OWASP Juice Shop

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build & Deploy OWASP Juice Shop
    runs-on: ubuntu-latest

    steps:
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Pull Juice Shop Docker image
        run: |
          docker pull bkimminich/juice-shop

  security_testing:
    name: Security Testing
    runs-on: ubuntu-latest
    needs: build
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript-typescript' ]

    # Etape 2: SAST Analysis using codeQL
    steps:
      - name: Checkout repository
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac #v4.0.0
      - name: Install dependencies
        run: npm install
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
          queries: security-extended
          config: |
            paths-ignore:
              - 'data/static/codefixes'
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

    # Etape 3: Analyse SCA using Synk
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor

      # Etape 4: Analyse DAST
      - name: Start Juice Shop
        run: |
          docker run -d -p 3000:3000 bkimminich/juice-shop
          sleep 30

      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.7.0
        with:
          target: 'http://localhost:3000'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'

      # - name: Install Snyk CLI
      #   run: npm install -g snyk
      # - name: Run Snyk for Dependency Scanning
      #   run: snyk test --all-projects

      # - name: Set up OWASP ZAP
      #   uses: zaproxy/action-full-scan@v0.7.0
      #   env:
      #     ZAP_API_KEY: ${{ secrets.ZAP_API_KEY }}
      # - name: Run OWASP ZAP DAST scan
      #   run: |
      #     docker run --rm -v $(pwd):/zap/wrk:rw -t owasp/zap2docker-stable zap-full-scan.py -t http://localhost:3000

  # vulnerability_management:
  #   name: Manage & Visualize Vulnerabilities
  #   runs-on: ubuntu-latest
  #   needs: security_testing

  #   steps:
  #     - name: Install SonarQube Scanner
  #       run: |
  #         curl -sSLo sonarqube-scanner-cli.zip https://github.com/SonarSource/sonar-scanner-cli/releases/download/4.6.2.2472/sonar-scanner-cli-4.6.2.2472-linux.zip
  #         unzip sonarqube-scanner-cli.zip -d $HOME
  #         export PATH=$HOME/sonar-scanner-*/bin:$PATH

  #     - name: Run SonarQube scan
  #       run: |
  #         sonar-scanner \
  #           -Dsonar.projectKey=juice-shop \
  #           -Dsonar.sources=. \
  #           -Dsonar.host.url=https://sonarcloud.io \
  #           -Dsonar.login=${{ secrets.SONARQUBE_TOKEN }}

  redeploy:
    name: Redeploy OWASP Juice Shop
    runs-on: ubuntu-latest
    needs: security_testing
    if: github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Pull latest Juice Shop Docker image
        run: |
          docker pull bkimminich/juice-shop

      - name: Redeploy Juice Shop
        run: |
          docker run -d -p 3000:3000 bkimminich/juice-shop